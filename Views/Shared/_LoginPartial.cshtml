@using Microsoft.AspNetCore.Identity
@using LocalMarket.Services.Producer
@using LocalMarket.Data.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject IProducerService service


<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {

        var userId = User.GetId();
        var UserIsProducer = service.IsProducer(userId);

        @if (!UserIsProducer && !User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-white btn-outline-success my-2 my-sm-0" asp-area="" asp-controller="Producer" asp-action="Create">I'm producer</a>
            </li>

        }
        else if(UserIsProducer && !User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link  text-uppercase text-dark" asp-area="" asp-controller="Product" asp-action="Add">Add Product</a>
            </li>
            <li class="nav-item">
                <a class="nav-link  text-uppercase text-dark" asp-area="" asp-controller="Product" asp-action="Mine" asp-route-userId=@userId>Mine Products</a>
            </li>

        }

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="fas fa-user"></i></a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark"><i class="fas fa-sign-out-alt fa-lg"></i></button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
